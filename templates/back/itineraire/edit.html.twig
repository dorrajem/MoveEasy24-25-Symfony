{% extends 'base.html.twig' %}

{% block title %}Edit Itinerary{% endblock %}

{% block body %}
<h1 class="h3 mb-4 text-gray-800">Edit Itinerary</h1>

{{ form_start(form) }}
    {{ form_widget(form) }}
    <button class="btn btn-warning mt-3">Update</button>
    <a href="{{ path('itineraire_index') }}" class="btn btn-secondary mt-3">Cancel</a>
{{ form_end(form) }}
<script>
    const stationCoords = {{ stations|json_encode()|raw }}; // loaded from controller
    const startSelect = document.getElementById('itineraire_startStation');
    const endSelect = document.getElementById('itineraire_endStation');
    const distanceInput = document.getElementById('itineraire_distance');

    function toRad(deg) {
        return deg * Math.PI / 180;
    }

    function haversine(lat1, lon1, lat2, lon2) {
        const R = 6371;
        const dLat = toRad(lat2 - lat1);
        const dLon = toRad(lon2 - lon1);
        const a = Math.sin(dLat/2)**2 + Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * Math.sin(dLon/2)**2;
        return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
    }

    function updateDistance() {
        const startId = startSelect.value;
        const endId = endSelect.value;
        const start = stationCoords[startId];
        const end = stationCoords[endId];

        if (start && end) {
            const dist = haversine(start.latitude, start.longitude, end.latitude, end.longitude);
            distanceInput.value = dist.toFixed(2);
        }
    }

    startSelect.addEventListener('change', updateDistance);
    endSelect.addEventListener('change', updateDistance);
</script>
{% endblock %}
