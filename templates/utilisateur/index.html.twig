{% extends 'base.html.twig' %}

{% block title %}Liste des utilisateurs{% endblock %}
{% block page_title %}Liste des utilisateurs{% endblock %}

{% block body %}
<div class="data-card">
    <!-- En-tête de la carte -->
    <div class="card-header">
        <h5><i class="fas fa-users"></i> Liste des utilisateurs</h5>
        <a href="{{ path('app_utilisateur_new') }}" class="btn btn-primary">
            <i class="fas fa-plus"></i> Ajouter un utilisateur
        </a>
    </div>
    
    <!-- Corps de la carte -->
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table mb-0">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Nom</th>
                        <th>Prénom</th>
                        <th>Email</th>
                        <th>Profil</th>
                        <th style="width: 250px">Actions</th>
                    </tr>
                </thead>
                <tbody id="users-table-body">
                    {% for utilisateur in utilisateurs %}
                        <tr class="list-item">
                            <td>{{ utilisateur.id }}</td>
                            <td>{{ utilisateur.nom }}</td>
                            <td>{{ utilisateur.prenom }}</td>
                            <td>{{ utilisateur.email }}</td>
                            <td>
                                {% if utilisateur.profil %}
                                    <div class="d-flex gap-2">
                                        <a href="{{ path('app_profil_utilisateur_show', {id: utilisateur.profil.id}) }}" class="btn btn-sm btn-info">
                                            <i class="fas fa-eye"></i> Voir
                                        </a>
                                        <a href="{{ path('app_profil_utilisateur_edit', {id: utilisateur.profil.id}) }}" class="btn btn-sm btn-warning">
                                            <i class="fas fa-edit"></i> Modifier
                                        </a>
                                    </div>
                                {% else %}
                                    <a href="{{ path('app_profil_utilisateur_new', {utilisateurId: utilisateur.id}) }}" class="btn btn-sm btn-secondary">
                                        <i class="fas fa-plus"></i> Créer profil
                                    </a>
                                {% endif %}
                            </td>
                            <td>
                                <div class="item-actions">
                                    <!-- Bouton "Voir" -->
                                    <a href="{{ path('app_utilisateur_show', {id: utilisateur.id}) }}" class="btn btn-sm btn-primary">
                                        <i class="fas fa-eye"></i> Voir
                                    </a>
                                    <!-- Bouton "Modifier" -->
                                    <a href="{{ path('app_utilisateur_edit', {id: utilisateur.id}) }}" class="btn btn-sm btn-warning">
                                        <i class="fas fa-edit"></i> Modifier
                                    </a>
                                    <!-- Bouton "Supprimer" -->
                                    <form method="post" action="{{ path('app_utilisateur_delete', {id: utilisateur.id}) }}" class="d-inline" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cet utilisateur ?');">
                                        <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ utilisateur.id) }}">
                                        <button class="btn btn-sm btn-danger" type="submit">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="6" class="text-center p-4">Aucun utilisateur trouvé.</td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Sélectionner uniquement le champ de recherche en haut (celui qui est souligné)
            const topSearchField = document.querySelector('input[placeholder="Rechercher..."]');
            const usersTableBody = document.getElementById('users-table-body');
            let searchTimeout;

            // S'assurer que nous avons trouvé le champ de recherche
            if (topSearchField) {
                // Fonction pour faire la recherche AJAX
                function performSearch(searchTerm) {
                    fetch(`{{ path('app_utilisateur_search') }}?search=${encodeURIComponent(searchTerm)}`)
                        .then(response => response.json())
                        .then(data => {
                            // Vider et remplir le tableau avec les résultats
                            usersTableBody.innerHTML = '';
                            
                            if (data.length === 0) {
                                const row = document.createElement('tr');
                                row.innerHTML = '<td colspan="6" class="text-center p-4">Aucun utilisateur trouvé.</td>';
                                usersTableBody.appendChild(row);
                            } else {
                                data.forEach(user => {
                                    const row = document.createElement('tr');
                                    row.className = 'list-item';
                                    
                                    // Contenu de base pour chaque utilisateur
                                    let profilContent = `
                                        <a href="/profil-utilisateur/new?utilisateurId=${user.id}" class="btn btn-sm btn-secondary">
                                            <i class="fas fa-plus"></i> Créer profil
                                        </a>
                                    `;
                                    
                                    row.innerHTML = `
                                        <td>${user.id}</td>
                                        <td>${user.nom}</td>
                                        <td>${user.prenom}</td>
                                        <td>${user.email}</td>
                                        <td>${profilContent}</td>
                                        <td>
                                            <div class="item-actions">
                                                <a href="/utilisateur/${user.id}" class="btn btn-sm btn-primary">
                                                    <i class="fas fa-eye"></i> Voir
                                                </a>
                                                <a href="/utilisateur/${user.id}/edit" class="btn btn-sm btn-warning">
                                                    <i class="fas fa-edit"></i> Modifier
                                                </a>
                                                <form method="post" action="/utilisateur/${user.id}" class="d-inline" onsubmit="return confirm('Êtes-vous sûr de vouloir supprimer cet utilisateur ?');">
                                                    <input type="hidden" name="_token" value="">
                                                    <button class="btn btn-sm btn-danger" type="submit">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </form>
                                            </div>
                                        </td>
                                    `;
                                    usersTableBody.appendChild(row);
                                    
                                    // Vérification si l'utilisateur a un profil
                                    fetch(`/utilisateur/${user.id}/has-profile`)
                                        .then(response => response.json())
                                        .then(profileData => {
                                            if (profileData.hasProfile) {
                                                const profileCell = row.querySelector('td:nth-child(5)');
                                                profileCell.innerHTML = `
                                                    <div class="d-flex gap-2">
                                                        <a href="/profil-utilisateur/${profileData.profileId}" class="btn btn-sm btn-info">
                                                            <i class="fas fa-eye"></i> Voir
                                                        </a>
                                                        <a href="/profil-utilisateur/${profileData.profileId}/edit" class="btn btn-sm btn-warning">
                                                            <i class="fas fa-edit"></i> Modifier
                                                        </a>
                                                    </div>
                                                `;
                                            }
                                        })
                                        .catch(error => {
                                            console.error('Erreur lors de la vérification du profil:', error);
                                        });
                                });
                            }
                        })
                        .catch(error => {
                            console.error('Erreur lors de la recherche:', error);
                        });
                }

                // Événement lors de la saisie dans le champ de recherche en haut
                topSearchField.addEventListener('input', function() {
                    // Utiliser un délai pour éviter trop de requêtes pendant la frappe
                    clearTimeout(searchTimeout);
                    searchTimeout = setTimeout(() => {
                        performSearch(this.value);
                    }, 300);
                });
            } else {
                console.error('Champ de recherche en haut non trouvé. Vérifiez le sélecteur.');
            }
        });
    </script>
{% endblock %}